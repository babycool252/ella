{% comment %}
  Product Category Gallery Section
  Features:
  - Left side: Product category list with highlighted selected category
  - Right side: Product gallery with large images and navigation arrows
  - Responsive design with reflection effects
  - Dynamic collection loading
{% endcomment %}

<div class="product-category-gallery section-{{ section.id }}-padding" 
     data-section-id="{{ section.id }}" 
     data-section-type="product-category-gallery">
  
  <div class="page-width">
    <div class="product-category-gallery__container">
      
      <!-- Left Side: Category List -->
      <div class="product-category-gallery__categories">
        <div class="category-list">
          {% for block in section.blocks %}
            {% if block.type == 'category' %}
              <div class="category-item{% if block.settings.is_active %} category-item--active{% endif %}"
                   data-category="{{ block.settings.category_handle }}"
                   data-collection="{{ block.settings.collection_handle }}"
                   {{ block.shopify_attributes }}>
                <a href="{{ block.settings.category_link | default: '#' }}" 
                   class="category-link{% if block.settings.is_active %} category-link--active{% endif %}"
                   data-collection-handle="{{ block.settings.collection_handle }}">
                  {{ block.settings.category_name }}
                </a>
              </div>
            {% endif %}
          {% endfor %}
        </div>
      </div>

      <!-- Right Side: Product Gallery -->
      <div class="product-category-gallery__products">
        <div class="product-gallery" data-gallery>
          
          <!-- Navigation Arrows -->
          {% if section.settings.show_navigation_arrows %}
            <button class="gallery-nav gallery-nav--prev" data-nav="prev" aria-label="Previous products">
              <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
                <path d="M15 18L9 12L15 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
            </button>
            <button class="gallery-nav gallery-nav--next" data-nav="next" aria-label="Next products">
              <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
                <path d="M9 18L15 12L9 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
            </button>
          {% endif %}

          <!-- Product Slides Container -->
          <div class="product-slides" data-slides>
            <!-- Products will be loaded dynamically via JavaScript -->
          </div>

          <!-- Loading State -->
          <div class="product-loading" data-loading>
            <div class="loading-spinner">
              <svg width="40" height="40" viewBox="0 0 40 40" fill="none">
                <circle cx="20" cy="20" r="18" stroke="#e0e0e0" stroke-width="4"/>
                <circle cx="20" cy="20" r="18" stroke="#333333" stroke-width="4" stroke-dasharray="113" stroke-dashoffset="113" stroke-linecap="round">
                  <animate attributeName="stroke-dashoffset" values="113;0;113" dur="1.5s" repeatCount="indefinite"/>
                </circle>
              </svg>
            </div>
          </div>
        </div>

        <!-- Dots Navigation (if enabled) -->
        {% if section.settings.show_dots %}
          <div class="gallery-dots" data-dots>
            <!-- Dots will be generated dynamically -->
          </div>
        {% endif %}
      </div>
    </div>
  </div>
</div>

<style>
  .product-category-gallery {
    background: #ffffff;
    padding: 60px 0 100px;
  }

  .product-category-gallery__container {
    display: grid;
    grid-template-columns: 280px 1fr;
    gap: 80px;
    align-items: start;
    max-width: 1400px;
    margin: 0 auto;
    padding: 0 40px;
  }

  /* Category List Styles */
  .category-list {
    display: flex;
    flex-direction: column;
    gap: 24px;
    padding: 20px 0;
  }

  .category-item {
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .category-link {
    display: block;
    text-decoration: none;
    color: #666666;
    font-size: 13px;
    font-weight: 300;
    text-transform: uppercase;
    letter-spacing: 1px;
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
    cursor: pointer;
    padding: 8px 0;
    border-left: 2px solid transparent;
    padding-left: 12px;
  }

  .category-link--active {
    font-size: 32px;
    font-weight: 400;
    font-family: 'Georgia', 'Times New Roman', serif;
    color: #2c2c2c;
    text-transform: none;
    letter-spacing: -0.5px;
    line-height: 1.1;
    border-left: 2px solid #d4af37;
    padding-left: 20px;
  }

  .category-link:hover {
    color: #2c2c2c;
    transform: translateX(4px);
  }

  .category-link--active:hover {
    color: #2c2c2c;
    transform: translateX(0);
  }

  /* Product Gallery Styles */
  .product-gallery {
    position: relative;
    overflow: visible;
    min-height: 500px;
    background: linear-gradient(135deg, #fafafa 0%, #ffffff 100%);
    border-radius: 16px;
    padding: 60px 40px;
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.04);
  }

  .product-slides {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 50px;
    padding: 0;
  }

  .product-slide {
    opacity: 0;
    transition: all 0.6s cubic-bezier(0.4, 0, 0.2, 1);
    transform: translateY(20px) scale(0.98);
  }

  .product-slide--active {
    opacity: 1;
    transform: translateY(0) scale(1);
  }

  .product-item {
    text-align: center;
    background: #ffffff;
    border-radius: 12px;
    padding: 40px 15px 35px;
    transition: all 0.3s ease;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.03);
    border: 1px solid rgba(0, 0, 0, 0.02);
  }

  .product-item:hover {
    transform: translateY(-8px);
    box-shadow: 0 12px 40px rgba(0, 0, 0, 0.08);
  }

  .product-item__image-wrapper {
    position: relative;
    margin-bottom: 30px;
    overflow: visible;
    border-radius: 0;
    padding: 0;
    height: 350px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .product-item__image {
    width: 100%;
    max-width: 100%;
    height: 100%;
    object-fit: contain;
    object-position: center;
    transition: transform 0.4s ease;
    display: block;
    background: transparent;
    filter: contrast(1.1) brightness(1.05);
  }

  .product-item__image:hover {
    transform: scale(1.08);
  }

  /* Remove reflection effect to let products blend with background */

  .product-item__placeholder {
    width: 100%;
    max-width: 100%;
    height: 350px;
    margin: 0 auto;
    display: flex;
    align-items: center;
    justify-content: center;
    background: transparent;
    border-radius: 0;
    border: 1px dashed #e0e0e0;
  }

  .product-item__title {
    font-size: 18px;
    font-weight: 500;
    color: #2c2c2c;
    margin: 0 0 12px 0;
    line-height: 1.3;
    font-family: 'Georgia', 'Times New Roman', serif;
  }

  .product-item__price {
    font-size: 16px;
    font-weight: 600;
    color: #d4af37;
    margin: 0;
    letter-spacing: 0.5px;
  }

  .product-item__description {
    font-size: 14px;
    color: #666666;
    line-height: 1.5;
    margin: 0;
    max-width: 300px;
    margin: 0 auto;
  }

  /* Loading State */
  .product-loading {
    display: flex;
    align-items: center;
    justify-content: center;
    min-height: 400px;
  }

  .loading-spinner {
    text-align: center;
  }

  .loading-spinner svg {
    animation: spin 1.5s linear infinite;
  }

  @keyframes spin {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
  }

  /* Navigation Arrows */
  .gallery-nav {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background: rgba(255, 255, 255, 0.95);
    border: 1px solid rgba(212, 175, 55, 0.2);
    border-radius: 50%;
    width: 48px;
    height: 48px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    z-index: 10;
    backdrop-filter: blur(8px);
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
  }

  .gallery-nav:hover {
    background: #d4af37;
    border-color: #d4af37;
    transform: translateY(-50%) scale(1.1);
    box-shadow: 0 6px 25px rgba(212, 175, 55, 0.3);
  }

  .gallery-nav--prev {
    left: -24px;
  }

  .gallery-nav--next {
    right: -24px;
  }

  .gallery-nav svg {
    width: 18px;
    height: 18px;
    color: #2c2c2c;
    transition: color 0.3s ease;
  }

  .gallery-nav:hover svg {
    color: #ffffff;
  }

  /* Dots Navigation */
  .gallery-dots {
    display: flex;
    justify-content: center;
    gap: 8px;
    margin-top: 30px;
  }

  .gallery-dot {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background: #e0e0e0;
    border: none;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .gallery-dot--active {
    background: #333333;
  }

  .gallery-dot:hover {
    background: #999999;
  }

  /* Responsive Design */
  @media (max-width: 1200px) {
    .product-category-gallery__container {
      max-width: 1200px;
      padding: 0 30px;
      gap: 60px;
    }

    .product-slides {
      gap: 40px;
    }

    .product-gallery {
      padding: 50px 30px;
    }
  }

  @media (max-width: 1024px) {
    .product-category-gallery__container {
      grid-template-columns: 250px 1fr;
      gap: 50px;
    }

    .product-slides {
      grid-template-columns: repeat(3, 1fr);
      gap: 30px;
    }

    .gallery-nav--prev {
      left: -20px;
    }

    .gallery-nav--next {
      right: -20px;
    }
  }

  @media (max-width: 768px) {
    .product-category-gallery {
      padding: 40px 0 60px;
    }

    .product-category-gallery__container {
      grid-template-columns: 1fr;
      gap: 40px;
      padding: 0 20px;
    }

    .category-list {
      flex-direction: row;
      overflow-x: auto;
      gap: 25px;
      padding: 15px 0;
      white-space: nowrap;
      -webkit-overflow-scrolling: touch;
    }

    .category-item {
      flex-shrink: 0;
    }

    .category-link {
      font-size: 12px;
      white-space: nowrap;
      padding: 6px 0;
    }

    .category-link--active {
      font-size: 24px;
      white-space: nowrap;
    }

    .product-gallery {
      padding: 40px 20px;
      border-radius: 12px;
    }

    .product-slides {
      grid-template-columns: repeat(2, 1fr);
      gap: 20px;
    }

    .product-item {
      padding: 30px 15px 25px;
    }

    .product-item__image-wrapper {
      height: 280px;
      margin-bottom: 25px;
    }

    .gallery-nav {
      display: none;
    }
  }

  @media (max-width: 480px) {
    .product-category-gallery {
      padding: 30px 0 50px;
    }

    .product-category-gallery__container {
      padding: 0 15px;
    }

    .category-link {
      font-size: 11px;
      letter-spacing: 0.8px;
    }

    .category-link--active {
      font-size: 20px;
    }

    .product-gallery {
      padding: 30px 15px;
    }

    .product-slides {
      grid-template-columns: 1fr;
      gap: 25px;
    }

    .product-item {
      padding: 20px 15px 25px;
    }

    .product-item__title {
      font-size: 16px;
    }

    .product-item__price {
      font-size: 14px;
    }

    .product-item__image-wrapper {
      height: 300px;
      margin-bottom: 20px;
    }
  }
</style>

<script>
  class ProductCategoryGallery {
    constructor(container) {
      this.container = container;
      this.slidesContainer = container.querySelector('[data-slides]');
      this.loadingElement = container.querySelector('[data-loading]');
      this.dots = container.querySelectorAll('[data-dot-index]');
      this.navPrev = container.querySelector('[data-nav="prev"]');
      this.navNext = container.querySelector('[data-nav="next"]');
      this.categories = container.querySelectorAll('[data-collection-handle]');
      
      this.currentSlide = 0;
      this.currentProducts = [];
      this.totalSlides = 0;
      
      this.init();
    }

    init() {
      this.bindEvents();
      this.loadInitialCollection();
    }

    bindEvents() {
      // Navigation arrows
      if (this.navPrev) {
        this.navPrev.addEventListener('click', () => this.prevSlide());
      }
      if (this.navNext) {
        this.navNext.addEventListener('click', () => this.nextSlide());
      }

      // Category filtering
      this.categories.forEach(categoryLink => {
        categoryLink.addEventListener('click', (e) => {
          e.preventDefault();
          const collectionHandle = categoryLink.dataset.collectionHandle;
          if (collectionHandle) {
            this.loadCollection(collectionHandle);
          }
        });
      });
    }

    async loadInitialCollection() {
      // Load the active category's collection
      const activeCategoryLink = this.container.querySelector('.category-link--active');
      if (activeCategoryLink) {
        const collectionHandle = activeCategoryLink.dataset.collectionHandle;
        if (collectionHandle) {
          await this.loadCollection(collectionHandle);
        }
      } else {
        // 如果没有默认激活的分类，加载第一个分类
        const firstCategoryLink = this.container.querySelector('[data-collection-handle]');
        if (firstCategoryLink) {
          const collectionHandle = firstCategoryLink.dataset.collectionHandle;
          if (collectionHandle) {
            await this.loadCollection(collectionHandle);
          }
        }
      }
    }

    async loadCollection(collectionHandle) {
      if (!collectionHandle || collectionHandle.trim() === '') {
        // 如果collection handle为空，显示空状态
        this.showEmptyState();
        this.updateCategoryActiveState(collectionHandle);
        return;
      }

      this.showLoading();

      try {
        // Fetch collection products from Shopify
        const response = await fetch(`/collections/${collectionHandle}/products.json?limit=12`);
        
        if (!response.ok) {
          throw new Error(`HTTP error! status: ${response.status}`);
        }
        
        const data = await response.json();
        
        this.currentProducts = data.products || [];
        this.totalSlides = this.currentProducts.length;
        
        this.renderProducts();
        this.updateCategoryActiveState(collectionHandle);
        this.hideLoading();
        
        // Reset to first slide
        this.currentSlide = 0;
        this.updateActiveSlide();
        
      } catch (error) {
        console.error('Error loading collection:', error);
        this.showEmptyState();
        this.updateCategoryActiveState(collectionHandle);
        this.hideLoading();
      }
    }

    renderProducts() {
      this.slidesContainer.innerHTML = '';
      
      // Show only first 3 products
      const productsToShow = this.currentProducts.slice(0, 3);
      
      productsToShow.forEach((product, index) => {
        const slide = document.createElement('div');
        slide.className = 'product-slide product-slide--active';
        slide.dataset.slideIndex = index;
        
        const featuredImage = product.featured_image || product.images?.[0];
        const imageUrl = featuredImage ? featuredImage.src : '';
        
        slide.innerHTML = `
          <div class="product-item">
            <div class="product-item__image-wrapper">
              ${imageUrl ? 
                `<img src="${imageUrl}" alt="${product.title}" class="product-item__image" loading="lazy" width="400" height="400">` :
                `<div class="product-item__placeholder">
                  <svg width="100" height="100" viewBox="0 0 100 100" fill="none">
                    <rect width="100" height="100" fill="#f5f5f5"/>
                    <path d="M30 40L50 60L70 40" stroke="#ccc" stroke-width="2"/>
                  </svg>
                </div>`
              }
            </div>
            <div class="product-item__info">
              <h3 class="product-item__title">${product.title}</h3>
              <p class="product-item__price">${this.formatPrice(product.variants?.[0]?.price)}</p>
            </div>
          </div>
        `;
        
        this.slidesContainer.appendChild(slide);
      });

      // Update total slides count for navigation
      this.totalSlides = productsToShow.length;
      
      // Update dots if enabled
      this.updateDots();
    }

    formatPrice(price) {
      if (!price) return '$0.00';
      return new Intl.NumberFormat('en-US', {
        style: 'currency',
        currency: 'USD'
      }).format(price / 100);
    }

    updateCategoryActiveState(collectionHandle) {
      // 移除所有分类的激活状态
      this.container.querySelectorAll('.category-item').forEach(item => {
        item.classList.remove('category-item--active');
        const categoryLink = item.querySelector('.category-link');
        if (categoryLink) {
          categoryLink.classList.remove('category-link--active');
        }
      });
      
      // 为选中的分类添加激活状态
      const activeCategory = this.container.querySelector(`[data-collection-handle="${collectionHandle}"]`);
      if (activeCategory) {
        activeCategory.closest('.category-item').classList.add('category-item--active');
        activeCategory.classList.add('category-link--active');
      }
    }

    showLoading() {
      if (this.loadingElement) {
        this.loadingElement.style.display = 'flex';
      }
    }

    hideLoading() {
      if (this.loadingElement) {
        this.loadingElement.style.display = 'none';
      }
    }

    showEmptyState() {
      this.slidesContainer.innerHTML = `
        <div class="product-slide product-slide--active" style="grid-column: 1/-1; text-align: center; padding: 60px 20px;">
          <div class="product-empty-state">
            <svg width="80" height="80" viewBox="0 0 80 80" fill="none" style="margin: 0 auto 20px; opacity: 0.3;">
              <rect width="80" height="80" fill="#f5f5f5" rx="8"/>
              <path d="M25 35L40 50L55 35" stroke="#ccc" stroke-width="2" stroke-linecap="round"/>
            </svg>
            <h3 style="color: #999; font-size: 18px; margin: 0 0 10px 0;">暂无产品</h3>
            <p style="color: #ccc; font-size: 14px; margin: 0;">该分类下暂时没有产品可展示</p>
          </div>
        </div>
      `;
      this.totalSlides = 0;
    }

    prevSlide() {
      // Navigation disabled as we show all 3 products at once
      return;
    }

    nextSlide() {
      // Navigation disabled as we show all 3 products at once
      return;
    }

    goToSlide(index) {
      // Navigation disabled as we show all 3 products at once
      return;
    }

    updateActiveSlide() {
      // All products are shown at once, no need to update active state
      return;
    }

    updateDots() {
      // Dots navigation disabled as we show all 3 products at once
      const dotsContainer = this.container.querySelector('[data-dots]');
      if (dotsContainer) {
        dotsContainer.innerHTML = '';
      }
    }
  }

  // Initialize all product category galleries
  document.addEventListener('DOMContentLoaded', () => {
    const galleries = document.querySelectorAll('[data-section-type="product-category-gallery"]');
    galleries.forEach(gallery => {
      new ProductCategoryGallery(gallery);
    });
  });
</script>

{% schema %}
{
  "name": "Product Category Gallery",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "header",
      "content": "Gallery Settings"
    },
    {
      "type": "checkbox",
      "id": "show_navigation_arrows",
      "label": "Show navigation arrows",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_dots",
      "label": "Show dots navigation",
      "default": false
    },
    {
      "type": "header",
      "content": "Layout Settings"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ],
  "blocks": [
    {
      "type": "category",
      "name": "Category",
      "settings": [
        {
          "type": "text",
          "id": "category_name",
          "label": "Category Name",
          "default": "Category"
        },
        {
          "type": "text",
          "id": "category_handle",
          "label": "Category Handle",
          "default": "category"
        },
        {
          "type": "collection",
          "id": "collection_handle",
          "label": "Collection"
        },
        {
          "type": "url",
          "id": "category_link",
          "label": "Category Link"
        },
        {
          "type": "checkbox",
          "id": "is_active",
          "label": "Is Active Category",
          "default": false
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Product Category Gallery",
      "blocks": [
        {
          "type": "category"
        }
      ]
    }
  ]
}
{% endschema %} 